/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var shape = ee.FeatureCollection("users/ashfakmahmud20/MZMBQ_EPSG4326"),
    test_area = /* color: #d63000 */ee.Geometry.Point([20.526934599995133, 46.86319703130402]);
/***** End of imports. If edited, may not auto-convert in the playground. *****/

/*
Author: Sean McCartney (sean.mccartney@nasa.gov)
Credit: NASA Applied Remote Sensing Training (ARSET) program

This code is free and open. The code shows how to visualize the occurrence, change, and 
transition of global surface water from 1984 to 2019 from the Joint Research Center's (JRC) 
Global Surface Water Mapping Layers, v1.3

Fore more information on the dataset, refer to the links below:
https://developers.google.com/earth-engine/datasets/catalog/JRC_GSW1_2_GlobalSurfaceWater
https://www.nature.com/articles/nature20584
*/

//////////////////////////////////////////////////////////////
// Asset List
//////////////////////////////////////////////////////////////
Map.addLayer(shape);
var gsw = ee.Image('JRC/GSW1_3/GlobalSurfaceWater');
var occurrence = gsw.select('occurrence');
var absolute_change = gsw.select("change_abs");
var transition = gsw.select('transition');

///////////////////////////////////////////////////////////////
// Center Map Location on Itaipu Reservoir (Brazil & Paraguay)
///////////////////////////////////////////////////////////////

// Map.setCenter(shape); // (Longitude, Latitude, Zoom extent [1-24])

//////////////////////////////////////////////////////////////
// Map Symbology
//////////////////////////////////////////////////////////////

var vis_occurrence = {
  min:0,
  max:100,
  palette: ['red', 'blue']
};

var vis_water_mask = {
  palette: ['white', 'black']
};

var vis_change = {
  min:-50,
  max:50,
  palette: ['red', 'black', 'limegreen'] //decreased=red, unchanged=black, increased=limegreen.
};

var vis_transition = { // https://developers.google.com/earth-engine/tutorials/tutorial_global_surface_water_04#basic-visualization
  min:0,
  max:10,
  palette: ['ffffff', '0000ff', '22b14c', 'd1102d', '99d9ea', 
  'b5e61d', 'e6a1aa', 'ff7f27', 'ffc90e', '7f7f7f', 'c3c3c3']
};

//////////////////////////////////////////////////////////////
// Map Legend (Transition classes)
//////////////////////////////////////////////////////////////

// Set position of panel
var legend = ui.Panel({
  style: {
    position: 'bottom-left',
    padding: '8px 15px'
  }
});
 
// Create legend title
var legendTitle = ui.Label({
  value: 'Transition classes (1984-2020)',
  style: {
    fontWeight: 'bold',
    fontSize: '16px',
    margin: '0 0 4px 0',
    padding: '0'
    }
});
 
// Add the title to the panel
legend.add(legendTitle);
 
// Creates and styles 1 row of the legend.
var makeRow = function(color, name) {
 
      // Create the label that is actually the colored box.
      var colorBox = ui.Label({
        style: {
          backgroundColor: '#' + color,
          // Use padding to give the box height and width.
          padding: '8px',
          margin: '0 0 4px 0'
        }
      });
 
      // Create the label filled with the description text.
      var description = ui.Label({
        value: name,
        style: {margin: '0 0 4px 6px'}
      });
 
      // return the panel
      return ui.Panel({
        widgets: [colorBox, description],
        layout: ui.Panel.Layout.Flow('horizontal')
      });
};
 
//  Palette with the colors
var palette =['0000ff', '22b14c', 'd1102d', '99d9ea', 
  'b5e61d', 'e6a1aa', 'ff7f27', 'ffc90e', '7f7f7f', 'c3c3c3','cccccc'];
 
// name of the legend
var label = ['Permanent','New permanent','Lost permanent',
  'Seasonal','New seasonal','Lost seasonal','Seasonal to permanent',
  'Permanent to seasonal','Ephemeral permanent','Ephemeral seasonal','No data'];
 
// Function to loop through each list above adding the palette and associated labels to the legend.
for (var i = 0; i < 11; i++) {
  legend.add(makeRow(palette[i], label[i]));
  }  
 
// add legend to map (alternatively you can also print the legend to the console)
Map.add(legend);

//////////////////////////////////////////////////////////////
// Calculations
//////////////////////////////////////////////////////////////

// Create a water mask using the greater than comparison operator .gt(), and
// then set the previously masked areas to zero using the .unmask() method:
var water_mask = occurrence.gt(90).unmask(0);

// Generate a histogram and print it to the console tab.
var histogram_graphic = ui.Chart.image.histogram({
  image: absolute_change,
  region: shape,
  scale: 30,
  minBucketWidth: 10
});

histogram_graphic.setOptions({
  title: 'Histogram of surface water change intensity.'
});
print(histogram_graphic);

// The resulting image object is a two band image where the first band 
// contains the area information in units of square meters, and the 
// second band contains the transition class information.
var area_image_with_transition_class = ee.Image.pixelArea().addBands(transition);
var reduction_results = area_image_with_transition_class.reduceRegion({
  reducer: ee.Reducer.sum().group({
    groupField: 1,
    groupName: 'transition_class_value',
  }),
  geometry: shape,
  scale: 30,
  bestEffort: true,
  });
print('reduction_results', reduction_results);

//////////////////////////////////////////////////////////////
// Map Layers
//////////////////////////////////////////////////////////////

Map.addLayer({
  eeObject: water_mask,
  visParams: vis_water_mask,
  name: '90% occurrence water mask (1984-2020)',
  shown: false
});

Map.addLayer({
  eeObject: transition,
  visParams: vis_transition,
  name: 'Transition classes (1984-2020)',
  shown: false
});

// The absolute difference in the mean occurrence value between 
// 1984-1999 vs 2000-2019 for homologous months 
Map.addLayer({
  eeObject: absolute_change,
  visParams: vis_change,
  name: 'Absolute change in occurrence (1984-1999 vs 2000-2019)',
  shown: false
});

// The addition of .updateMask(occurrence.divide(100)) makes the
// opacity of the pixels to be set based on the occurrence value.
Map.addLayer({
  eeObject: occurrence.updateMask(occurrence.divide(100)),
  name: "Water Occurrence (1984-2019)",
  visParams: vis_occurrence
});

// Uncomment the code below to export an image band to your drive.

Export.image.toDrive({
  image: occurrence,
  description: 'water_occurrence_roi',
  scale: 30,
  region: shape,
  crs: 'EPSG:4326',
  fileFormat: 'GeoTIFF',
});

// Uncomment the code below to generate a download link for your roi of a band image.

/*var link = occurrence.getDownloadURL({
    scale: 30,
    region: Clip,
    crs: 'EPSG:4326',
    fileFormat: 'GeoTIFF',
    });
print(link);
*/